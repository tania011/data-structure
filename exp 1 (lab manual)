#include<stdio.h>         //10feb,2025
#include<stdlib.h>
#define MAX_SIZE 100
void insert(int *arr,int *size){
    int pos,value,i;
    printf("Enter Position : ");
    scanf("%d",&pos);
    printf("Enter value : ");          
    scanf("%d",&value);                         //position = 1 -> index = 0
    if(pos > *size || pos <= 0){
        printf("Invalid Position!!!\n");
    }
    
    else{
        for(int i=*size;i>=pos;i--){
            arr[i]=arr[i-1];
        }
        arr[pos-1]=value;
        (*size)++;
        printf("Element Inserted!!!\n");
    }
}
void printlist(int *arr,int n){
    if(n==0){
        printf("List is empty!!!\n");
    }
    else{
        int i;
        printf("List elements are : ");
        for(i=0;i<n;i++){
            printf("%d ",arr[i]);
        }
    }
}
void delete(int *arr,int *size){
    int pos,i;
    printf("Enter Position : ");
    scanf("%d",&pos);
    if(pos<=0 || pos>*size){
        printf("Invalid Position!!!\n");
    }
    else{
        for(i=pos-1;i<*size-1;i++){
            arr[i]=arr[i+1];
        }
        (*size)--;
        printf("Element deleted!!!\n");
    }
}
void search(int *arr,int size){
    int target,i,flag=0;
    printf("Enter searching element : ");
    scanf("%d",&target);
    for(i=0;i<size;i++){
        if(arr[i]==target){
            flag=1;
            break;
        }
    }
    if(flag==1){
        printf("Element found!!!\n");
    }
    else{
        printf("Not found!!!\n");
    }
}
int main(){
   int arr[MAX_SIZE],size;      
   printf("Enter list size : ");                  //size = actual size of array ,, max = maximum size of array
   scanf("%d",&size);
   printf("Enter list elements : ");
   for(int i=0;i<size;i++){
        scanf("%d",&arr[i]);
   }
   while(1){
    printf("1. Insertion\n");
    printf("2. Deletion\n");
    printf("3. Traversing\n");
    printf("4. Searching\n");
    printf("5. Exit\n");
   int choice;
   printf("Enter choice : ");
   scanf("%d",&choice);
   switch(choice){
    case 1:
            insert(arr,&size);
        break;
    case 2:
            delete(arr,&size);
        break;
    case 3:
            printlist(arr,size);
        break;
    case 4:
            search(arr,size);
        break;
    case 5:
        exit(0);
        break;
    default:
        printf("Invalid choice!!!!!\n");
    }
    printf("\n");
    system("pause");
   }
    
    return 0;
}
